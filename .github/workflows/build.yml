name: Build and test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install fuse
        run: sudo apt-get install fuse libfuse-dev pkg-config

      - name: Build
        run: cargo build --workspace --verbose

      - name: Build examples
        run: cargo build --workspace --examples --verbose
          
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install fuse
        run: sudo apt-get install fuse libfuse-dev pkg-config

      - name: Run all tests
        run: cargo test --workspace --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install fuse
        run: sudo apt-get install fuse libfuse-dev pkg-config

      - run: rustup component add clippy

      - name: Check formatting
        run: cargo fmt -- --check

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets

  build-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install fuse
        run: sudo apt-get install fuse libfuse-dev pkg-config

      - name: Set up Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - run: cargo install grcov

      - name: Run tests with coverage
        run: |
          export CARGO_INCREMENTAL=0
          export RUSTFLAGS="-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
          export RUSTDOCFLAGS="-Cpanic=abort"
          cargo build --workspace --exclude memflow-derive
          cargo test --workspace --exclude memflow-derive
          grcov ./target/debug/ -s . -t lcov --llvm --branch --ignore-not-existing -o ./target/debug/coverage
          bash <(curl -s https://codecov.io/bash) -f ./target/debug/coverage -t ${{ secrets.CODECOV_TOKEN }};
